version: '3.8'

services:
  # Main application
  smart-crm:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smart-crm-app
    ports:
      - "80:8080"
    environment:
      - NODE_ENV=production
    env_file:
      - .env.production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - smart-crm-network
    volumes:
      - ./logs:/var/log/nginx
    depends_on:
      - redis

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: smart-crm-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-smartcrm2024}
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - smart-crm-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: smart-crm-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - smart-crm-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: smart-crm-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-smartcrm2024}
      - GF_INSTALL_PLUGINS=
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - smart-crm-network
    depends_on:
      - prometheus

  # Log aggregation with Loki
  loki:
    image: grafana/loki:latest
    container_name: smart-crm-loki
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - smart-crm-network

  # Promtail for log shipping
  promtail:
    image: grafana/promtail:latest
    container_name: smart-crm-promtail
    volumes:
      - ./logs:/var/log/nginx:ro
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - smart-crm-network
    depends_on:
      - loki

networks:
  smart-crm-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data:
  loki-data: